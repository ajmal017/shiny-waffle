from strategy.strategy import TradingStrategy
from event import event
from financial_assets.financial_assets import FinancialAsset
from random import random


class AverageCrossOver(TradingStrategy):

    """
    Sample code for a simple SMA crossover strategy.
    No signal generations are implemented yet
    """

    def __init__(self, name, short, long):
        super().__init__(name)
        self.short = short
        self.long = long

    def generate_signal(self, asset):
        """

        :param asset: Asset that have generated a market signal in the event handler
        :return: Either a SignalEventBuy or SignalEventSell based on the signal generated by the logic in this method

        For now only returning a buy signal as I have yet to implement any technical indicators
        """

        assert isinstance(asset, FinancialAsset)
        if random() > 0.9:
            return event.SignalEventBuy(asset.ticker)
        else:
            return None

